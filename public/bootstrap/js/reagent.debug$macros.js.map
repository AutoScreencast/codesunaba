{"version":3,"sources":["reagent/debug$macros.cljc"],"mappings":"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","names":["ret__4785__auto__","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","reagent.debug$macros/log","&form","&env","cljs.core.sequence","cljs.core/seq","cljs.core.concat","cljs.core/List","seq36683","G__36684","cljs.core/first","cljs.core/next","G__36685","self__4723__auto__","forms","reagent.debug$macros/warn","seq36697","G__36698","G__36699","cljs.core/*assert*","reagent.debug$macros/warn-unless","seq36706","G__36707","G__36708","G__36709","cond","reagent.debug$macros/error","seq36722","G__36723","G__36724","reagent.debug$macros/println","seq36731","G__36732","G__36733","reagent.debug$macros/prn","seq36739","G__36740","G__36741","reagent.debug$macros/dbg","x","cljs.core/vec","ns","cljs.analyzer/*cljs-ns*","cljs.core/meta","cljs.core.pr_str","reagent.debug$macros/dev?","reagent.debug$macros/time","seq36774","G__36775","G__36776","label","reagent.debug$macros/assert-some","value","tag","reagent.debug$macros/assert-component","reagent.debug$macros/assert-js-object","reagent.debug$macros/assert-new-state","reagent.debug$macros/assert-callable"],"sourcesContent":["(ns reagent.debug\n  (:refer-clojure :exclude [prn println time])\n  (:require [cljs.analyzer :as analyzer]))\n\n(defmacro log\n  \"Print with console.log, if it exists.\"\n  [& forms]\n  `(when reagent.debug.has-console\n     (.log js/console ~@forms)))\n\n(defmacro warn\n  \"Print with console.warn.\"\n  [& forms]\n  (when *assert*\n    `(when reagent.debug.has-console\n       (.warn (if reagent.debug.tracking\n                reagent.debug.track-console js/console)\n              (str \"Warning: \" ~@forms)))))\n\n(defmacro warn-unless\n  [cond & forms]\n  (when *assert*\n    `(when (not ~cond)\n       (warn ~@forms))))\n\n(defmacro error\n  \"Print with console.error.\"\n  [& forms]\n  (when *assert*\n    `(when reagent.debug.has-console\n       (.error (if reagent.debug.tracking\n                 reagent.debug.track-console js/console)\n               (str ~@forms)))))\n\n(defmacro println\n  \"Print string with console.log\"\n  [& forms]\n  `(log (str ~@forms)))\n\n(defmacro prn\n  \"Like standard prn, but prints using console.log (so that we get\nnice clickable links to source in modern browsers).\"\n  [& forms]\n  `(log (pr-str ~@forms)))\n\n(defmacro dbg\n  \"Useful debugging macro that prints the source and value of x,\nas well as package name and line number. Returns x.\"\n  [x]\n  (let [ns (str analyzer/*cljs-ns*)]\n    `(let [x# ~x]\n       (println (str \"dbg \"\n                     ~ns \":\"\n                     ~(:line (meta &form))\n                     \": \"\n                     ~(pr-str x)\n                     \": \"\n                     (pr-str x#)))\n       x#)))\n\n(defmacro dev?\n  \"True if assertions are enabled.\"\n  []\n  (if *assert* true false))\n\n(defmacro time [& forms]\n  (let [ns (str analyzer/*cljs-ns*)\n        label (str ns \":\" (:line (meta &form)))]\n    `(let [label# ~label\n           res# (do\n                  (js/console.time label#)\n                  ~@forms)]\n       (js/console.timeEnd label#)\n       res#)))\n\n(defmacro assert-some [value tag]\n  `(assert ~value (str ~tag \" must not be nil\")))\n\n(defmacro assert-component [value]\n  `(assert (comp/reagent-component? ~value)\n           (str \"Expected a reagent component, not \"\n                (pr-str ~value))))\n\n(defmacro assert-js-object [value]\n  `(assert (not (map? ~value))\n           (str \"Expected a JS object, not \"\n                (pr-str ~value))))\n\n(defmacro assert-new-state [value]\n  `(assert (or (nil? ~value) (map? ~value))\n           (str \"Expected a valid new state, not \"\n                (pr-str ~value))))\n\n(defmacro assert-callable [value]\n  `(assert (ifn? ~value)\n           (str \"Expected something callable, not \"\n                (pr-str ~value))))\n"]}
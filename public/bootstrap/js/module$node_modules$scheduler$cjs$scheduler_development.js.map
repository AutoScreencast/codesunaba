{
"version":3,
"file":"module$node_modules$scheduler$cjs$scheduler_development.js",
"lineCount":22,
"mappings":"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",
"sources":["node_modules/scheduler/cjs/scheduler.development.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$scheduler$cjs$scheduler_development\"] = function(global,require,module,exports) {\n/** @license React v0.20.1\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar enableSchedulerDebugging = false;\nvar enableProfiling = true;\n\nvar requestHostCallback;\nvar requestHostTimeout;\nvar cancelHostTimeout;\nvar requestPaint;\nvar hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  var localPerformance = performance;\n\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date;\n  var initialTime = localDate.now();\n\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\n\nif ( // If Scheduler runs in a non-DOM environment, it falls back to a naive\n// implementation using setTimeout.\ntypeof window === 'undefined' || // Check if MessageChannel is supported, too.\ntypeof MessageChannel !== 'function') {\n  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,\n  // fallback to a naive implementation.\n  var _callback = null;\n  var _timeoutID = null;\n\n  var _flushCallback = function () {\n    if (_callback !== null) {\n      try {\n        var currentTime = exports.unstable_now();\n        var hasRemainingTime = true;\n\n        _callback(hasRemainingTime, currentTime);\n\n        _callback = null;\n      } catch (e) {\n        setTimeout(_flushCallback, 0);\n        throw e;\n      }\n    }\n  };\n\n  requestHostCallback = function (cb) {\n    if (_callback !== null) {\n      // Protect against re-entrancy.\n      setTimeout(requestHostCallback, 0, cb);\n    } else {\n      _callback = cb;\n      setTimeout(_flushCallback, 0);\n    }\n  };\n\n  requestHostTimeout = function (cb, ms) {\n    _timeoutID = setTimeout(cb, ms);\n  };\n\n  cancelHostTimeout = function () {\n    clearTimeout(_timeoutID);\n  };\n\n  exports.unstable_shouldYield = function () {\n    return false;\n  };\n\n  requestPaint = exports.unstable_forceFrameRate = function () {};\n} else {\n  // Capture local references to native APIs, in case a polyfill overrides them.\n  var _setTimeout = window.setTimeout;\n  var _clearTimeout = window.clearTimeout;\n\n  if (typeof console !== 'undefined') {\n    // TODO: Scheduler no longer requires these methods to be polyfilled. But\n    // maybe we want to continue warning if they don't exist, to preserve the\n    // option to rely on it in the future?\n    var requestAnimationFrame = window.requestAnimationFrame;\n    var cancelAnimationFrame = window.cancelAnimationFrame;\n\n    if (typeof requestAnimationFrame !== 'function') {\n      // Using console['error'] to evade Babel and ESLint\n      console['error'](\"This browser doesn't support requestAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');\n    }\n\n    if (typeof cancelAnimationFrame !== 'function') {\n      // Using console['error'] to evade Babel and ESLint\n      console['error'](\"This browser doesn't support cancelAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');\n    }\n  }\n\n  var isMessageLoopRunning = false;\n  var scheduledHostCallback = null;\n  var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main\n  // thread, like user events. By default, it yields multiple times per frame.\n  // It does not attempt to align with frame boundaries, since most tasks don't\n  // need to be frame aligned; for those that do, use requestAnimationFrame.\n\n  var yieldInterval = 5;\n  var deadline = 0; // TODO: Make this configurable\n\n  {\n    // `isInputPending` is not available. Since we have no way of knowing if\n    // there's pending input, always yield at the end of the frame.\n    exports.unstable_shouldYield = function () {\n      return exports.unstable_now() >= deadline;\n    }; // Since we yield every frame regardless, `requestPaint` has no effect.\n\n\n    requestPaint = function () {};\n  }\n\n  exports.unstable_forceFrameRate = function (fps) {\n    if (fps < 0 || fps > 125) {\n      // Using console['error'] to evade Babel and ESLint\n      console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');\n      return;\n    }\n\n    if (fps > 0) {\n      yieldInterval = Math.floor(1000 / fps);\n    } else {\n      // reset the framerate\n      yieldInterval = 5;\n    }\n  };\n\n  var performWorkUntilDeadline = function () {\n    if (scheduledHostCallback !== null) {\n      var currentTime = exports.unstable_now(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync\n      // cycle. This means there's always time remaining at the beginning of\n      // the message event.\n\n      deadline = currentTime + yieldInterval;\n      var hasTimeRemaining = true;\n\n      try {\n        var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n\n        if (!hasMoreWork) {\n          isMessageLoopRunning = false;\n          scheduledHostCallback = null;\n        } else {\n          // If there's more work, schedule the next message event at the end\n          // of the preceding one.\n          port.postMessage(null);\n        }\n      } catch (error) {\n        // If a scheduler task throws, exit the current browser task so the\n        // error can be observed.\n        port.postMessage(null);\n        throw error;\n      }\n    } else {\n      isMessageLoopRunning = false;\n    } // Yielding to the browser will give it a chance to paint, so we can\n  };\n\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  requestHostCallback = function (callback) {\n    scheduledHostCallback = callback;\n\n    if (!isMessageLoopRunning) {\n      isMessageLoopRunning = true;\n      port.postMessage(null);\n    }\n  };\n\n  requestHostTimeout = function (callback, ms) {\n    taskTimeoutID = _setTimeout(function () {\n      callback(exports.unstable_now());\n    }, ms);\n  };\n\n  cancelHostTimeout = function () {\n    _clearTimeout(taskTimeoutID);\n\n    taskTimeoutID = -1;\n  };\n}\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  var first = heap[0];\n  return first === undefined ? null : first;\n}\nfunction pop(heap) {\n  var first = heap[0];\n\n  if (first !== undefined) {\n    var last = heap.pop();\n\n    if (last !== first) {\n      heap[0] = last;\n      siftDown(heap, last, 0);\n    }\n\n    return first;\n  } else {\n    return null;\n  }\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (true) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (parent !== undefined && compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n\n  while (index < length) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (left !== undefined && compare(left, node) < 0) {\n      if (right !== undefined && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (right !== undefined && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar NoPriority = 0;\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nvar runIdCounter = 0;\nvar mainThreadIdCounter = 0;\nvar profilingStateSize = 4;\nvar sharedProfilingBuffer =  // $FlowFixMe Flow doesn't know about SharedArrayBuffer\ntypeof SharedArrayBuffer === 'function' ? new SharedArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : // $FlowFixMe Flow doesn't know about ArrayBuffer\ntypeof ArrayBuffer === 'function' ? new ArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : null // Don't crash the init path on IE9\n;\nvar profilingState =  sharedProfilingBuffer !== null ? new Int32Array(sharedProfilingBuffer) : []; // We can't read this but it helps save bytes for null checks\n\nvar PRIORITY = 0;\nvar CURRENT_TASK_ID = 1;\nvar CURRENT_RUN_ID = 2;\nvar QUEUE_SIZE = 3;\n\n{\n  profilingState[PRIORITY] = NoPriority; // This is maintained with a counter, because the size of the priority queue\n  // array might include canceled tasks.\n\n  profilingState[QUEUE_SIZE] = 0;\n  profilingState[CURRENT_TASK_ID] = 0;\n} // Bytes per element is 4\n\n\nvar INITIAL_EVENT_LOG_SIZE = 131072;\nvar MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\n\nvar eventLogSize = 0;\nvar eventLogBuffer = null;\nvar eventLog = null;\nvar eventLogIndex = 0;\nvar TaskStartEvent = 1;\nvar TaskCompleteEvent = 2;\nvar TaskErrorEvent = 3;\nvar TaskCancelEvent = 4;\nvar TaskRunEvent = 5;\nvar TaskYieldEvent = 6;\nvar SchedulerSuspendEvent = 7;\nvar SchedulerResumeEvent = 8;\n\nfunction logEvent(entries) {\n  if (eventLog !== null) {\n    var offset = eventLogIndex;\n    eventLogIndex += entries.length;\n\n    if (eventLogIndex + 1 > eventLogSize) {\n      eventLogSize *= 2;\n\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\n        // Using console['error'] to evade Babel and ESLint\n        console['error'](\"Scheduler Profiling: Event log exceeded maximum size. Don't \" + 'forget to call `stopLoggingProfilingEvents()`.');\n        stopLoggingProfilingEvents();\n        return;\n      }\n\n      var newEventLog = new Int32Array(eventLogSize * 4);\n      newEventLog.set(eventLog);\n      eventLogBuffer = newEventLog.buffer;\n      eventLog = newEventLog;\n    }\n\n    eventLog.set(entries, offset);\n  }\n}\n\nfunction startLoggingProfilingEvents() {\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\n  eventLog = new Int32Array(eventLogBuffer);\n  eventLogIndex = 0;\n}\nfunction stopLoggingProfilingEvents() {\n  var buffer = eventLogBuffer;\n  eventLogSize = 0;\n  eventLogBuffer = null;\n  eventLog = null;\n  eventLogIndex = 0;\n  return buffer;\n}\nfunction markTaskStart(task, ms) {\n  {\n    profilingState[QUEUE_SIZE]++;\n\n    if (eventLog !== null) {\n      // performance.now returns a float, representing milliseconds. When the\n      // event is logged, it's coerced to an int. Convert to microseconds to\n      // maintain extra degrees of precision.\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\n    }\n  }\n}\nfunction markTaskCompleted(task, ms) {\n  {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskCanceled(task, ms) {\n  {\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskErrored(task, ms) {\n  {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskRun(task, ms) {\n  {\n    runIdCounter++;\n    profilingState[PRIORITY] = task.priorityLevel;\n    profilingState[CURRENT_TASK_ID] = task.id;\n    profilingState[CURRENT_RUN_ID] = runIdCounter;\n\n    if (eventLog !== null) {\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\nfunction markTaskYield(task, ms) {\n  {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[CURRENT_RUN_ID] = 0;\n\n    if (eventLog !== null) {\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\nfunction markSchedulerSuspended(ms) {\n  {\n    mainThreadIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\nfunction markSchedulerUnsuspended(ms) {\n  {\n    if (eventLog !== null) {\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n\n/* eslint-disable no-var */\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n\n      {\n        markTaskStart(timer, currentTime);\n        timer.isQueued = true;\n      }\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n  {\n    markSchedulerUnsuspended(initialTime);\n  } // We'll need a host callback the next time work is scheduled.\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = exports.unstable_now();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n\n    {\n      var _currentTime = exports.unstable_now();\n\n      markSchedulerSuspended(_currentTime);\n    }\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports.unstable_shouldYield())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      markTaskRun(currentTask, currentTime);\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = exports.unstable_now();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n        markTaskYield(currentTask, currentTime);\n      } else {\n        {\n          markTaskCompleted(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = exports.unstable_now();\n  var startTime;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  {\n    newTask.isQueued = false;\n  }\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n\n    {\n      markTaskStart(newTask, currentTime);\n      newTask.isQueued = true;\n    } // Schedule a host callback, if needed. If we're already performing work,\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  {\n    if (task.isQueued) {\n      var currentTime = exports.unstable_now();\n      markTaskCanceled(task, currentTime);\n      task.isQueued = false;\n    }\n  } // Null out the callback to indicate the task has been canceled. (Can't\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling =  {\n  startLoggingProfilingEvents: startLoggingProfilingEvents,\n  stopLoggingProfilingEvents: stopLoggingProfilingEvents,\n  sharedProfilingBuffer: sharedProfilingBuffer\n} ;\n\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_wrapCallback = unstable_wrapCallback;\n  })();\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","push","heap","node","index","length","parentIndex","parent","undefined","compare","peek","first","pop","last","i","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","logEvent","entries","eventLog","offset","eventLogIndex","eventLogSize","MAX_EVENT_LOG_SIZE","console","stopLoggingProfilingEvents","newEventLog","Int32Array","set","eventLogBuffer","buffer","markTaskStart","task","ms","profilingState","QUEUE_SIZE","TaskStartEvent","priorityLevel","advanceTimers","currentTime","timer","timerQueue","callback","startTime","expirationTime","taskQueue","isQueued","handleTimeout","isHostTimeoutScheduled","isHostCallbackScheduled","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","initialTime","SchedulerResumeEvent","mainThreadIdCounter","cancelHostTimeout","isPerformingWork","previousPriorityLevel","currentPriorityLevel","currentTask","unstable_shouldYield","didUserCallbackTimeout","runIdCounter","PRIORITY","CURRENT_TASK_ID","CURRENT_RUN_ID","TaskRunEvent","continuationCallback","unstable_now","NoPriority","TaskYieldEvent","TaskCompleteEvent","error","TaskErrorEvent","_currentTime","SchedulerSuspendEvent","performance","now","localPerformance","exports.unstable_now","localDate","Date","window","MessageChannel","_callback","_timeoutID","_flushCallback","hasRemainingTime","e","setTimeout","cb","clearTimeout","exports.unstable_shouldYield","requestPaint","unstable_forceFrameRate","exports.unstable_forceFrameRate","_setTimeout","_clearTimeout","cancelAnimationFrame","requestAnimationFrame","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","yieldInterval","deadline","fps","Math","floor","channel","port","port2","port1","onmessage","performWorkUntilDeadline","hasMoreWork","postMessage","sharedProfilingBuffer","SharedArrayBuffer","profilingStateSize","BYTES_PER_ELEMENT","ArrayBuffer","taskIdCounter","NormalPriority","unstable_Profiling","startLoggingProfilingEvents","INITIAL_EVENT_LOG_SIZE","unstable_IdlePriority","IdlePriority","unstable_ImmediatePriority","ImmediatePriority","unstable_LowPriority","LowPriority","unstable_NormalPriority","unstable_UserBlockingPriority","UserBlockingPriority","unstable_cancelCallback","TaskCancelEvent","unstable_continueExecution","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","eventHandler","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","options","delay","timeout","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","maxSigned31BitInt","LOW_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","newTask","unstable_wrapCallback","parentPriorityLevel","apply","arguments"]
}

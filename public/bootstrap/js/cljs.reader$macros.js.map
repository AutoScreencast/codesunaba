{"version":3,"sources":["cljs/reader$macros.cljc"],"mappings":";AAWA,AAAAA,AAAA,AAAA,AAAAC,AAAAC,AAAUC,AAAkBC;AAA5B,AACE,AAAMK,AAEE,AAACI,AAAI,AAAAC,AAEL,AAAA,AAACQ;AAFI,AAAA,AAAAP,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAMG;AAAN,AAAAF,AAAAD,AAAA,AAAA,AAAQI;AAAR,AAAA,AAAAF,AAAA,AAAAZ,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAAH,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAH,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAS,AAAA,AAAAZ,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAH,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACMU,AAAa,AAAA,AAAA,AAACE,AAAUD,AAAEE;AAFlC,AAAA,AAAAX,AAAA,AAACC,AAAKC;AADjB,AAAA,AAAAP,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAH,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKeJ,AAAiBK;;AANlC,AAAA,AAAA,AAAA,AAAUN;;AAAVH","names":["ret__4785__auto__","&form","&env","cljs.reader$macros/add-data-readers","default-readers","cljs.core.sequence","cljs.core/seq","cljs.core.concat","cljs.core/List","data-readers","cljs.core/deref","cljs.core.get","cljs.env/*compiler*","cljs.core.map","p__35689","vec__35690","cljs.core.nth","cljs.core/vec","k","v","cljs.core.vary_meta","cljs.core/assoc","cljs.core.into"],"sourcesContent":[";; Copyright (c) Rich Hickey. All rights reserved.\n;; The use and distribution terms for this software are covered by the\n;; Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;; which can be found in the file epl-v10.html at the root of this distribution.\n;; By using this software in any fashion, you are agreeing to be bound by\n;; the terms of this license.\n;; You must not remove this notice, or any other, from this software.\n\n(ns cljs.reader\n  (:require [cljs.env :as env]))\n\n(defmacro add-data-readers [default-readers]\n  (let [data-readers\n        (->> (get @env/*compiler* :cljs.analyzer/data-readers)\n          (map (fn [[k v]]\n                 `['~k (fn [x#] (~(vary-meta v assoc :cljs.analyzer/no-resolve true) x#))]))\n          (into {}))]\n    `(do (merge ~default-readers ~data-readers))))\n"]}